/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: packet.proto */

#ifndef PROTOBUF_C_packet_2eproto__INCLUDED
#define PROTOBUF_C_packet_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct RpcService__PacketStream RpcService__PacketStream;
typedef struct RpcService__DataResponse RpcService__DataResponse;


/* --- enums --- */


/* --- messages --- */

struct  RpcService__PacketStream
{
  ProtobufCMessage base;
  ProtobufCBinaryData data;
  int32_t length;
  char *type;
  char *tid;
  int32_t direction;
  protobuf_c_boolean is_alert;
  int32_t sid;
  char *classtype;
  char *emsg;
};
#define RPC_SERVICE__PACKET_STREAM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc_service__packet_stream__descriptor) \
    , {0,NULL}, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  RpcService__DataResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean status;
  char *message;
};
#define RPC_SERVICE__DATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpc_service__data_response__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/* RpcService__PacketStream methods */
void   rpc_service__packet_stream__init
                     (RpcService__PacketStream         *message);
size_t rpc_service__packet_stream__get_packed_size
                     (const RpcService__PacketStream   *message);
size_t rpc_service__packet_stream__pack
                     (const RpcService__PacketStream   *message,
                      uint8_t             *out);
size_t rpc_service__packet_stream__pack_to_buffer
                     (const RpcService__PacketStream   *message,
                      ProtobufCBuffer     *buffer);
RpcService__PacketStream *
       rpc_service__packet_stream__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc_service__packet_stream__free_unpacked
                     (RpcService__PacketStream *message,
                      ProtobufCAllocator *allocator);
/* RpcService__DataResponse methods */
void   rpc_service__data_response__init
                     (RpcService__DataResponse         *message);
size_t rpc_service__data_response__get_packed_size
                     (const RpcService__DataResponse   *message);
size_t rpc_service__data_response__pack
                     (const RpcService__DataResponse   *message,
                      uint8_t             *out);
size_t rpc_service__data_response__pack_to_buffer
                     (const RpcService__DataResponse   *message,
                      ProtobufCBuffer     *buffer);
RpcService__DataResponse *
       rpc_service__data_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpc_service__data_response__free_unpacked
                     (RpcService__DataResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RpcService__PacketStream_Closure)
                 (const RpcService__PacketStream *message,
                  void *closure_data);
typedef void (*RpcService__DataResponse_Closure)
                 (const RpcService__DataResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct RpcService__RpcService_Service RpcService__RpcService_Service;
struct RpcService__RpcService_Service
{
  ProtobufCService base;
  void (*entrance)(RpcService__RpcService_Service *service,
                   const RpcService__PacketStream *input,
                   RpcService__DataResponse_Closure closure,
                   void *closure_data);
};
typedef void (*RpcService__RpcService_ServiceDestroy)(RpcService__RpcService_Service *);
void rpc_service__rpc_service__init (RpcService__RpcService_Service *service,
                                     RpcService__RpcService_ServiceDestroy destroy);
#define RPC_SERVICE__RPC_SERVICE__BASE_INIT \
    { &rpc_service__rpc_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define RPC_SERVICE__RPC_SERVICE__INIT(function_prefix__) \
    { RPC_SERVICE__RPC_SERVICE__BASE_INIT,\
      function_prefix__ ## entrance  }
void rpc_service__rpc_service__entrance(ProtobufCService *service,
                                        const RpcService__PacketStream *input,
                                        RpcService__DataResponse_Closure closure,
                                        void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor rpc_service__packet_stream__descriptor;
extern const ProtobufCMessageDescriptor rpc_service__data_response__descriptor;
extern const ProtobufCServiceDescriptor rpc_service__rpc_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_packet_2eproto__INCLUDED */
